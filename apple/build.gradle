/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

String sparkVersion = '3.4.3.2-apple-SNAPSHOT'
String sparkMajorVersion = '3.4'
String scalaVersion = System.getProperty("scalaVersion") != null ? System.getProperty("scalaVersion") : System.getProperty("defaultScalaVersion")

project(":iceberg-apple") {
    apply plugin: 'java-library'

    dependencies {
        api project(':iceberg-api')
        implementation project(":iceberg-spark:iceberg-spark-${sparkMajorVersion}_${scalaVersion}")
        implementation project(path: ':iceberg-bundled-guava', configuration: 'shadow')
        implementation project(':iceberg-common')
        implementation project(':iceberg-core')
        implementation project(':iceberg-aws')
        implementation project(':iceberg-hive-metastore')

        // Add for Aws Apple Connect Internal
        implementation 'org.slf4j:slf4j-api'
        compileOnly (group: "com.apple.pie.spark", name: "awsappleconnect-spark-utils-shaded", classifier: "shaded", version: libs.versions.aws.apple.connect.get()) {
            transitive = false
        }

        compileOnly("org.apache.spark:spark-hive_${scalaVersion}:${sparkVersion}") {
            exclude group: 'org.apache.avro', module: 'avro'
            exclude group: 'org.apache.arrow'
            exclude group: 'org.apache.parquet'
            // to make sure netty libs only come from project(':iceberg-arrow')
            exclude group: 'io.netty', module: 'netty-buffer'
            exclude group: 'io.netty', module: 'netty-common'
            exclude group: 'org.roaringbitmap'
            // use the parquet lib from boson
            exclude group: 'org.apache.parquet'
        }

        compileOnly(libs.hadoop2.common) {
            exclude group: 'org.apache.avro', module: 'avro'
            exclude group: 'org.slf4j', module: 'slf4j-log4j12'
            exclude group: 'javax.servlet', module: 'servlet-api'
            exclude group: 'com.google.code.gson', module: 'gson'
        }
        compileOnly libs.aws.java.sdk.sts
        compileOnly platform(libs.awssdk.bom)
        compileOnly 'software.amazon.awssdk:url-connection-client'
        compileOnly 'software.amazon.awssdk:apache-client'
        compileOnly 'software.amazon.awssdk:s3'
        compileOnly 'software.amazon.awssdk:kms'
        compileOnly 'software.amazon.awssdk:glue'
        compileOnly 'software.amazon.awssdk:sts'
        compileOnly 'software.amazon.awssdk:dynamodb'
        compileOnly 'software.amazon.awssdk:lakeformation'

        testImplementation 'org.junit.vintage:junit-vintage-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.slf4j:slf4j-simple'

        testImplementation project(path: ':iceberg-api', configuration: 'testArtifacts')
        testImplementation project(path: ':iceberg-hive-metastore', configuration: 'testArtifacts')
        testImplementation project(path: ":iceberg-spark:iceberg-spark-${sparkMajorVersion}_${scalaVersion}", configuration: 'testArtifacts')
    }

}

